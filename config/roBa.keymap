#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <2>;
    scroll-layers = <3>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <42 0>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <42 1>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <42 2>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R             &kp T                                               &kp Y        &kp U  &lt 3 I      &kp O    &kp P
&mt LCTRL A       &kp S         &kp D         &kp F             &kp G        &kp LS(LG(S))           &kp SEMICOLON  &kp H        &kp J  &kp K        &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp B        &kp ESC                 &kp SQT        &kp N        &kp M  &lt 3 COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&mt LCTRL TAB     &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 LANGUAGE_2  &lt 2 SPACE  &mt LEFT_ALT LANG1      &kp BACKSPACE  &lt 3 ENTER                               &kp GRAVE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PG_UP)>;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                       &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp NON_US_BACKSLASH  &kp PIPE
&kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&trans           &trans        &trans        &trans        &trans        &trans      &trans  &trans        &trans         &trans        &trans                &kp PLUS
&trans           &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                           &kp EQUAL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                     &trans                 &kp LC(LG(LEFT))  &mkp MB3  &kp LC(LG(RIGHT))  &kp LC(LA(LG(NUMBER_1)))
&trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &trans      &trans   &kp RIGHT_PARENTHESIS  &mkp MB1          &mkp MB2  &trans             &kp LC(LA(LG(NUMBER_2)))
&trans  &trans  &trans  &trans  &kp LEFT_BRACKET      &trans      &trans   &kp RIGHT_BRACKET      &kp LG(TAB)       &trans    &trans             &kp LA(LC(LG(NUMBER_3)))
&trans  &trans  &trans  &trans  &trans                &trans      &kp DEL  &trans                                                                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp LG(LC(NUMBER_1))  &kp LC(LG(NUMBER_2))  &kp LC(LG(NUMBER_3))  &kp LC(LG(NUMBER_4))  &kp LC(LG(NUMBER_5))                      &trans  &kp HOME        &kp UP_ARROW    &kp END           &trans
&trans                &trans                &trans                &trans                &trans                &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp RIGHT_ALT
&trans                &trans                &trans                &trans                &trans                &trans      &trans  &trans  &kp LG(T)       &trans          &kp LEFT_CONTROL  &trans
&trans                &trans                &trans                &trans                &trans                &trans      &trans  &trans                                                    &trans
            >;
        };
    };
};
